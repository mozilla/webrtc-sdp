language: rust
cache: cargo
sudo: true
os:
  - linux
  - osx

env:
  - FEATURES=""
  - FEATURES="serialize"
rust:
  - nightly
  - beta
  - stable
  # mimimum stable version because we use init shorthand
  - 1.17.0

matrix:
  allow_failures:
    - rust: nightly

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - zlib1g-dev
      - libiberty-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libssl-dev

# Add tarpaulin
before_cache: |
  if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
    RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin -f
  fi

# Add clippy
before_script:
  - export PATH=$PATH:~/.cargo/bin
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "stable" ]]; then
      rustup component add rustfmt-preview
      rustup component add clippy
    fi

script:
  - echo FEATURES="$FEATURES"
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "stable" ]]; then
      cargo fmt --all -- --check
    fi
  - cargo clean
  - cargo build --verbose --all --features="$FEATURES"
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "stable" ]]; then
      cargo clippy --all-targets --all-features -- -D warnings;
    fi
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "1.17.0" ]]; then
      cargo test --all-features --verbose --all
    else
    #cargo test --all-targets --all-features --verbose --all
      cargo tarpaulin -v
    fi

    #after_success: |
    #if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
    # Uncomment the following two lines create and upload a report for codecov.io
    #cargo tarpaulin --out Xml
    #bash <(curl -s https://codecov.io/bash)
    #fi
